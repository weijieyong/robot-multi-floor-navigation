<?xml version="1.0"?>
<launch>
  
  <!--- Run Jackal Gazebo -->  
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="world_name" default="$(find jackal_elevator)/worlds/modified_elevator.world" />
  <arg name="map_file" default="$(find multi_floor_navigation)/maps/floor0.yaml"/> <!-- Generate map using SLAM, put map in the appropriate folder and refer here -->
  <arg name="config" default="navigation" />
  <arg name="front_laser" default="true" />

  <arg name="use_map_topic" default="false"/>
  <arg name="scan_topic" default="front/scan" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find jackal_elevator)/launch/jackal_repos_world.launch">
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="front_laser" value="$(arg front_laser)" />
    <!-- <arg name="z_pos" value="0.5"/> -->
  </include>

  <!-- Run Map Server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Run AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">
      <param name="use_map_topic" value="$(arg use_map_topic)"/>
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type" value="diff"/>
      <param name="odom_alpha5" value="0.1"/>
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="720"/>
      <param name="laser_min_range" value="0.1"/>
      <param name="laser_max_range" value="30.0"/>
      <param name="min_particles" value="500"/>
      <param name="max_particles" value="2000"/>
      <!-- Maximum error between the true distribution and the estimated distribution. -->
      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>
      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
      <!-- translation std dev, m -->
      <param name="odom_alpha3" value="0.2"/>
      <param name="odom_alpha4" value="0.2"/>
      <param name="laser_z_hit" value="0.5"/>
      <param name="laser_z_short" value="0.05"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.5"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>
      <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model. -->
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <!-- Translational movement required before performing a filter update.  -->
      <param name="update_min_d" value="0.1"/>
      <!--Rotational movement required before performing a filter update. -->
      <param name="update_min_a" value="0.314"/>
      <param name="odom_frame_id" value="odom"/>
      <param name="base_frame_id" value="base_link"/>
      <param name="global_frame_id" value="map"/>
      <!-- Number of filter updates required before resampling. -->
      <param name="resample_interval" value="1"/>
      <!-- Increase tolerance because the computer can get quite busy -->
      <param name="transform_tolerance" value="1.0"/>
      <!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. -->
      <param name="recovery_alpha_slow" value="0.0"/>
      <!--Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. -->
      <param name="recovery_alpha_fast" value="0.1"/>
      <!-- Initial pose mean -->
      <param name="initial_pose_x" value="4.0" />
      <param name="initial_pose_y" value="-5.0" />
      <param name="initial_pose_a" value="0.0" />
      <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.-->
      <param name="receive_map_topic" value="true"/>
      <!--  When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. -->
      <param name="first_map_only" value="false"/>
      <remap from="scan" to="$(arg scan_topic)"/>
    </node>


  <!-- Run Move Base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find multi_floor_navigation)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find multi_floor_navigation)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    
    <rosparam file="$(find jackal_navigation)/params/map_nav_params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find jackal_navigation)/params/map_nav_params/global_costmap_params.yaml" command="load" />
    
    <rosparam file="$(find multi_floor_navigation)/params/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find multi_floor_navigation)/params/move_base_params.yaml" command="load" />
    
    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    
    <remap from="odom" to="odometry/filtered" />
  </node>

  <!--- Run Jackal RViz -->  
  <include file="$(find jackal_viz)/launch/view_robot.launch">
    <arg name="config" value="$(arg config)"/>    
  </include>

</launch>